apply plugin: 'com.android.library'

android {

    publishNonDefault true
    compileSdkVersion project.compileSdkVersion
    resourcePrefix "weexcomm"

    defaultConfig {
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField 'Boolean', 'useGCanvas', "$useGCanvas"
            buildConfigField 'Boolean', 'useLottie', "$useLottie"
            buildConfigField 'Boolean', 'useBindingx', "$useBindingx"

        }
        debug {

            buildConfigField 'Boolean', 'useGCanvas', "$useGCanvas"
            buildConfigField 'Boolean', 'useLottie', "$useLottie"
            buildConfigField 'Boolean', 'useBindingx', "$useBindingx"

            debuggable true
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "androidx.recyclerview:recyclerview:1.0.0"
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    implementation "androidx.appcompat:appcompat:1.0.0"
    implementation "com.google.android.material:material:1.0.0"
    implementation("androidx.media:media:1.0.0")

    if (useWeexaar) {
        debugImplementation project(":weex_sdk:debug")
        releaseImplementation project(":weex_sdk:release")
    } else {
        implementation "com.taobao.android:weex_sdk:$weexVersion"
    }

    implementation "com.alibaba:fastjson:${fastjsonLibVersion}"
    implementation "com.squareup.okhttp:okhttp:${versions.okhttp}"
    implementation "com.squareup.okhttp:okhttp-ws:${versions.okhttp}"
    implementation 'com.squareup.okio:okio:1.0.1'

//    implementation project(':img:picasso')
    implementation project(':img:fresco')

//    debugImplementation 'com.taobao.android:weex_inspector:0.18.10'
//    releaseImplementation 'com.taobao.android:weex_inspector:0.18.10'

    implementation 'com.taobao.android.weex_inspection:protocol:1.1.4.1'
//    debugImplementation 'com.android.support.test.espresso:espresso-idling-resource:2.2.2'
    implementation 'com.taobao.android.weex_inspection:urlconnection_interceptor:1.0.0'

//    debugImplementation 'com.taobao.android:weex_analyzer:0.1.0.5'

//    implementation 'com.taobao.android:dexposed:0.1.8'
//    implementation 'com.loopj.android:android-async-http:1.4.9@aar'

    implementation project(":weex_assets")

    // weex plugin

    if (useLottie) {
        implementation project(":weex_lottie")
    }

    if (useBindingx) {
        // bindingx
        implementation 'com.alibaba.android:bindingx-core:1.0.3'
        implementation 'com.alibaba.android:bindingx_weex_plugin:1.0.3'
    }

    if (useGCanvas) {
        // gcanvas
        implementation "com.taobao.gcanvas.adapters:img:1.0.0"
        implementation "com.taobao.gcanvas.adapters:img_fresco:1.0.1"
        implementation("com.taobao.gcanvas.bridges:spec:1.0.1") {
            exclude module: 'corelib'
        }
//    implementation "com.taobao.gcanvas:corelib:1.0.4"
//    implementation "com.taobao.gcanvas.bridges:weex:1.0.2"
        implementation project(":gcanvas:core")
        implementation project(":gcanvas:library")
        implementation project(":gcanvas:weex_bridge")
    }

    // qr/zbar
    implementation('cn.bertsir.zbarLibary:zbarlibary:latest.release') {
        exclude module: 'support-v4'
        exclude module: 'support-media-compat'
    }
    // statusbar
    implementation('com.jaeger.statusbarutil:library:1.5.1') {
        exclude module: 'support-v4'
        exclude module: 'design'
    }

    // arouter
    implementation("com.alibaba:arouter-api:$arouter_api_version") {
        exclude module: 'support-v4'
        exclude module: 'support-media-compat'
    }
    implementation project(":router")

}

if (file('../license/LICENSE').exists()) {
    license {
        header = file('../license/LICENSE')
    }
    preBuild.dependsOn licenseFormat
}
